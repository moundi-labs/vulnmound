// CVE-2025-58362 Vulnerable Hono Server

const { Hono } = require('hono');
const { serve } = require('@hono/node-server');

const app = new Hono();


app.use('*', async (c, next) => {
  // ! Hono 4.8.0 uses vulnerable getPath() internally
  const path = c.req.path;
  
  console.log(`[${new Date().toISOString()}] ${c.req.method} ${c.req.url}`);
  console.log(`  Parsed path: ${path}`);
  
  // Security check: block admin paths
  if (path.startsWith('/admin')) {
    console.log(`  Security check: BLOCKED`);
    return c.text('Access Denied: Admin path blocked', 403);
  }
  
  console.log(`  Security check: ALLOWED`);
  await next();
});

// Routes
app.get('/', (c) => {
  return c.text('Welcome to Vulnerable Hono Server (CVE-2025-58362)\n\nTry these URLs:\n- /public (should work)\n- /admin (should be blocked)\n- /admin/users (should be blocked)\n\nVulnerable URLs to test:\n- /https://example.com:8080@evil.com/admin\n- /https://user:pass@example.com/admin');
});

app.get('/public', (c) => {
  return c.text('This is a public endpoint - access granted');
});

app.get('/admin', (c) => {
  return c.text('Admin panel - this should be blocked!');
});

app.get('/admin/users', (c) => {
  return c.text('Admin users - this should be blocked!');
});

app.get('/admin/settings', (c) => {
  return c.text('Admin settings - this should be blocked!');
});

// Catch-all route for testing path parsing
app.get('*', (c) => {
  return c.text(`Path accessed: ${c.req.path}\nFull URL: ${c.req.url}\n\nThis endpoint shows how Hono parsed your request.`);
});

const port = 3000;

serve({
  fetch: app.fetch,
  port: port,
  hostname: '0.0.0.0'
});
