package main

import (
	"fmt"
	"os"
	"path/filepath"
)

// Vulnerable function that follows symlinks without proper validation
// This simulates the vulnerability in Podman's kube play before the fix
func vulnerableCreateFile(mountPoint, fileName string, data []byte) error {
	// !Direct filepath.Join without symlink protection
	dataPath := filepath.Join(mountPoint, fileName)

	fmt.Printf("Creating file at: %s\n", dataPath)

	// !os.Create follows symlinks, allowing escape from mountPoint
	f, err := os.Create(dataPath)
	if err != nil {
		return fmt.Errorf("cannot create file %q at volume mountpoint %q: %w", fileName, mountPoint, err)
	}
	defer f.Close()

	// Write data to the file
	if _, err := f.Write(data); err != nil {
		return err
	}

	// Set file permissions
	if err := os.Chmod(f.Name(), 0644); err != nil {
		return err
	}

	fmt.Printf("Successfully created file: %s\n", f.Name())
	return nil
}
